{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszk/code/Lukaszk01/Django/mysocial/mysocial-app/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nimport { checkPropTypes } from 'prop-types';\nexport function TweetsComponent(props) {\n  const textAreaRef = React.createRef();\n  const [newTweets, setNewTweets] = setState([]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newVal = textAreaRef.current.value;\n    let tempNewTweets = [...newTweets];\n    tempNewTweets.push({\n      conent: newVal,\n      likes: 0,\n      id: 1234\n    });\n    textAreaRef.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: textAreaRef,\n    required: true,\n    className: \"form-control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Tweet\"))), /*#__PURE__*/React.createElement(TweetsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }));\n}\nexport function TweetsList(props) {\n  const [tweetsInit, setTweetsInit] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweetsInit(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweetsInit.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\n  const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const actionDisplay = action.display ? action.display : 'Action';\n\n  const handleClick = event => {\n    event.preventDefault();\n\n    if (action.type === 'like') {\n      if (userLike === true) {\n        // perhaps i Unlike it?\n        setLikes(likes - 1);\n        setUserLike(false);\n      } else {\n        setLikes(likes + 1);\n        setUserLike(true);\n      }\n    }\n  };\n\n  const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }\n  }, display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lukaszk/code/Lukaszk01/Django/mysocial/mysocial-app/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","checkPropTypes","TweetsComponent","props","textAreaRef","createRef","newTweets","setNewTweets","setState","handleSubmit","event","preventDefault","newVal","current","value","tempNewTweets","push","conent","likes","id","className","TweetsList","tweetsInit","setTweetsInit","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","setLikes","userLike","setUserLike","actionDisplay","display","handleClick","type","Tweet","content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {loadTweets} from '../lookup'\nimport { checkPropTypes } from 'prop-types'\n\nexport function TweetsComponent(props) {\n    const textAreaRef = React.createRef()\n    const [newTweets, setNewTweets] = setState([])\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        let tempNewTweets = [...newTweets]\n        tempNewTweets.push ({\n            conent: newVal,\n            likes: 0,\n            id: 1234\n        })\n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <div className='col-12'>\n    <form onSubmit={handleSubmit}>\n        <textarea ref={textAreaRef} required={true} className='form-control'>\n\n        </textarea>\n        <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n    </div>\n    <TweetsList />\n    </div>\n}\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n   \n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status === 200){\n          setTweetsInit(response)\n        } else {\n          alert(\"There was an error\")\n        }\n      }\n      loadTweets(myCallback)\n    }, [])\n    return tweetsInit.map((item, index)=>{\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n    })\n  }\n\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0)\n    const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false)\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n    \n    const handleClick = (event) => {\n      event.preventDefault()\n      if (action.type === 'like') {\n        if (userLike === true) {\n          // perhaps i Unlike it?\n          setLikes(likes - 1)\n          setUserLike(false)\n        } else {\n          setLikes(likes + 1)\n          setUserLike(true)\n        }\n        \n      }\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }\n  \nexport function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n        <p>{tweet.id} - {tweet.content}</p>\n        <div className='btn btn-group'>\n          <ActionBtn tweet={tweet} action={{type: \"like\", display:\"Likes\"}}/>\n          <ActionBtn tweet={tweet} action={{type: \"unlike\", display:\"Unlike\"}}/>\n          <ActionBtn tweet={tweet} action={{type: \"retweet\", display:\"\"}}/>\n        </div>\n    </div>\n  }"]},"metadata":{},"sourceType":"module"}