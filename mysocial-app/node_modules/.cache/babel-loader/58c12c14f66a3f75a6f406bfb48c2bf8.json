{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszk/code/Lukaszk01/Django/mysocial/mysocial-app/src/tweets/components.js\";\nimport React, { useEffect, useState } from 'react';\nimport { loadTweets } from '../lookup';\nexport function TweetsList(props) {\n  const [tweets, setTweets] = useState([]);\n  useEffect(() => {\n    const myCallback = (response, status) => {\n      if (status === 200) {\n        setTweets(response);\n      } else {\n        alert(\"There was an error\");\n      }\n    };\n\n    loadTweets(myCallback);\n  }, []);\n  return tweets.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Tweet, {\n      tweet: item,\n      className: \"my-5 py-5 border bg-white text-dark\",\n      key: `${index}-{item.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }\n    });\n  });\n}\nexport function ActionBtn(props) {\n  const {\n    tweet,\n    action\n  } = props;\n  const className = props.className ? props.className : 'btn btn-primary btn-sm';\n  const display = action.type === 'like' ? `${tweet.likes} ${action.display}` : action.display;\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }\n  }, tweet.likes, \" \", display);\n}\nexport function Tweet(props) {\n  const {\n    tweet\n  } = props;\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, tweet.id, \" - \", tweet.content), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn btn-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"like\",\n      display: \"Likes\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"unlike\",\n      display: \"Unlike\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ActionBtn, {\n    tweet: tweet,\n    action: {\n      type: \"retweet\",\n      display: \"Retweet\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/lukaszk/code/Lukaszk01/Django/mysocial/mysocial-app/src/tweets/components.js"],"names":["React","useEffect","useState","loadTweets","TweetsList","props","tweets","setTweets","myCallback","response","status","alert","map","item","index","ActionBtn","tweet","action","className","display","type","likes","Tweet","id","content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react'\n\nimport {loadTweets} from '../lookup'\n\n\nexport function TweetsList(props) {\n    const [tweets, setTweets] = useState([])\n   \n    useEffect(() => {\n      const myCallback = (response, status) => {\n        if (status === 200){\n          setTweets(response)\n        } else {\n          alert(\"There was an error\")\n        }\n      }\n      loadTweets(myCallback)\n    }, [])\n    return tweets.map((item, index)=>{\n      return <Tweet tweet={item} className='my-5 py-5 border bg-white text-dark' key={`${index}-{item.id}`} />\n    })\n  }\n\n\nexport function ActionBtn(props) {\n    const {tweet, action} = props\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const display =action.type === 'like' ? `${tweet.likes} ${action.display}` : action.display\n    return <button className={className}>{tweet.likes} {display}</button>\n  }\n  \nexport function Tweet(props) {\n    const {tweet} = props\n    const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    return <div className={className}>\n        <p>{tweet.id} - {tweet.content}</p>\n        <div className='btn btn-group'>\n          <ActionBtn tweet={tweet} action={{type: \"like\", display:\"Likes\"}}/>\n          <ActionBtn tweet={tweet} action={{type: \"unlike\", display:\"Unlike\"}}/>\n          <ActionBtn tweet={tweet} action={{type: \"retweet\", display:\"Retweet\"}}/>\n        </div>\n    </div>\n  }"]},"metadata":{},"sourceType":"module"}